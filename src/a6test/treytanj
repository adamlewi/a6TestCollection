package a6test.treytanj; 

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

import static org.junit.Assert.*;

import a6.ColorPixel;
import a6.MutablePixelArrayPicture;
import a6.NoIntersectionException;
import a6.Picture;
import a6.Pixel;
import a6.Region;
import a6.RegionImpl;

public class a6Tests {
	
	Pixel r = new ColorPixel(1, 0, 0);
	Pixel g = new ColorPixel(0, 1, 0);
	Pixel b = new ColorPixel(0, 0, 1);
	
	Pixel[][] rgbPicture = { { r, r, r }, { r, r, r }, { b, b, b } };
	Pixel[][] greenPicture = { { g, g, g }, { g, g, g }, { g, g, g } };
	Pixel[][] bluePicture = { { b, b, b }, { b, b, b }, { b, b, b } };

	Picture rgb = new MutablePixelArrayPicture(rgbPicture, "rgb");
	Picture gPic = new MutablePixelArrayPicture(greenPicture, "green");
	Picture bPic = new MutablePixelArrayPicture(bluePicture, "blue");

	@Test
	public void intersectionTest() {
		Region hasInterOne = new RegionImpl(0, 0, 3, 3);
		Region hasInterTwo = new RegionImpl(1, 1, 5, 5);
		Region noInter = new RegionImpl(7, 7, 9, 9);
		
		try {
			Region hasIntersection = hasInterOne.intersect(hasInterTwo);
			assertEquals(hasIntersection.getLeft(), 1);
			assertEquals(hasIntersection.getTop(), 1);
			assertEquals(hasIntersection.getRight(), 3);
			assertEquals(hasIntersection.getBottom(), 3);
		}
		catch(Exception e) { 
			e.printStackTrace();
		}
		
		try {
			Region noIntersection = hasInterOne.intersect(noInter);
			fail();
		}
		catch(NoIntersectionException e) {
		}
	}
	
	@Test
	public void unionTest() {
		Region hasInterOne = new RegionImpl(0, 0, 3, 3);
		Region hasInterTwo = new RegionImpl(1, 1, 5, 5);
		Region noInter = new RegionImpl(7, 7, 9, 9);
		
		try {
			Region unionOne = hasInterOne.union(hasInterTwo);
			assertEquals(unionOne.getLeft(), 0);
			assertEquals(unionOne.getTop(), 0);
			assertEquals(unionOne.getRight(), 5);
			assertEquals(unionOne.getBottom(), 5);
			}
		catch(Exception e) {
			e.printStackTrace();
		}
		
		try {
			Region unionTwo = hasInterOne.union(noInter);
			assertEquals(unionTwo.getLeft(), 0);
			assertEquals(unionTwo.getTop(), 0);
			assertEquals(unionTwo.getRight(), 9);
			assertEquals(unionTwo.getBottom(), 9);
		}
		catch(Exception i) {
			i.printStackTrace();
		}
	}
} 
